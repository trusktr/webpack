{"version":3,"sources":["src/Calendar.js"],"names":[],"mappings":"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","file":"Calendar.js","sourcesContent":["/*\n * LICENSE\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n */\n\nimport Transform from 'famous/src/core/Transform';\nimport Transitionable from 'famous/src/transitions/Transitionable';\nimport Easing from 'famous/src/transitions/Easing';\n\nimport Molecule from './Molecule';\nimport Grid from './Grid';\nimport DoubleSidedPlane from './DoubleSidedPlane';\n\nimport forLength from 'army-knife/forLength';\n\n/**\n * A calendar widget for selecting a date (WIP).\n *\n * @class Calendar\n * @extends Molecule\n */\nexport class Calendar extends Molecule {\n\n    /**\n     * Create a new `Calendar` with the given Famo.us-style size array and\n     * transition. The transition is the type of animation used when switching\n     * between months.\n     *\n     * @constructor\n     * @param {Array} calendarSize A Famo.us-style width/height size array.\n     * @param {String} transition The name of the animation transition to use when switching months.\n     */\n    constructor(calendarSize, transition) {\n        super({size: calendarSize});\n\n        this.transition = transition;\n        this.flipSide = 0; // 0 means the initial front faces are showing, 1 means the initial back faces are showing.\n        this.columnsRows = [7,6];\n        this.planes = [];\n\n        this._initializeTransitions();\n        this._createGrid();\n\n        setTimeout( function() {\n            this.transitions[this.transition]();\n            setInterval(this.transitions[this.transition], 2000);\n        }.bind(this) , 800);\n    }\n\n    /**\n     * Creates the grid used for the layout of the day cells.\n     *\n     * @private\n     */\n    _createGrid() {\n        var grid = new Grid(this.columnsRows[0], this.columnsRows[1], this.options.size);\n\n        forLength(this.columnsRows[0]*this.columnsRows[1], function(i) {\n            var plane = new DoubleSidedPlane({\n                properties: {\n                    background: 'teal',\n                }\n            });\n            this.planes.push(plane);\n        }.bind(this));\n\n        grid.setChildren(this.planes);\n        this.node.add(grid);\n    }\n\n    /**\n     * Set up `this.transitions`, containing the available month-to-month\n     * transitions.\n     *\n     * @private\n     */\n    _initializeTransitions() {\n        this.transitions = {\n            flipDiagonal: function() {\n                this.flipSide = +!this.flipSide;\n                // determine which dimension of the grid is shorter and which is longer.\n                var shortest = 0;\n                var longest;\n                this.columnsRows.forEach(function(item, index) {\n                    if (item < this.columnsRows[shortest])\n                        shortest = index;\n                }.bind(this));\n                longest = +!shortest;\n\n                // for each diagonal of the grid, flip those cells.\n                forLength(this.columnsRows[0]+this.columnsRows[1]-1, function(column) {\n                    forLength(this.columnsRows[shortest], function(row) {\n                        if (column-row >= 0 && column-row < this.columnsRows[longest]) {\n                            var plane = this.planes[column-row + this.columnsRows[longest]*row];\n                            flipOne(plane, column);\n                        }\n                    }.bind(this));\n                }.bind(this));\n\n                function flipOne(item, column) {\n                    if (typeof item.__targetRotation == 'undefined') {\n                        item.__targetRotation = new Transitionable(0);\n                    }\n                    var rotation = new Transitionable(item.__targetRotation.get());\n                    item.__targetRotation.set(item.__targetRotation.get()+Math.PI);\n\n                    //item.get().transformFrom(function() {\n                        //return Transform.rotateY(rotation.get());\n                    //});\n                    item.children[0].get().transformFrom(function() {\n                        return Transform.rotateY(rotation.get());\n                    });\n                    item.children[1].get().transformFrom(function() {\n                        return Transform.rotateY(rotation.get()+Math.PI);\n                    });\n\n                    setTimeout(function() {\n                        rotation.set(item.__targetRotation.get(), { duration: 2000, curve: Easing.outExpo });\n                    }, 0+50*column);\n                }\n            }.bind(this)\n        };\n    }\n}\nexport default Calendar;\n"]}