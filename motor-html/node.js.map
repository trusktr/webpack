{"version":3,"sources":["../src/motor-html/node.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,QAAQ,GAAR,CAAY,wBAAZ;;;;IAEM,a;;;;;;;;;;;;;;;0CAKgB;AACd;;;AAGA,iBAAK,YAAL,GAAoB,KAApB;AACH;;;2CAEkB;;;;;;;;;AASf,gBAAK,EAAE,+BAAF,CAAL,EAAyC;AACrC,oBACI,EACI,KAAK,UAAL,YAA2B,aAA3B,IACG,KAAK,UAAL,2BAFP,KAIG,KAAK,UAAL,CAAgB,Y;AALvB,kBAME;;AAEE,6BAAK,YAAL,GAAoB,IAApB;AACA,8BAAM,IAAI,KAAJ,CAAU,8FAAV,CAAN;AACH;AACJ;;AAED;AACH;;;oCAEW;AACR;AACH;;;+BAEM;AACH;;;;;;;;AAQA,gBAAK,EAAE,+BAAF,CAAL,EACI,KAAK,UAAL,CAAgB,IAAhB,CAAqB,QAArB,CAA8B,KAAK,IAAnC;AACP;;;;;;;;qDAK4B;AACzB,mBAAO,mBAAS,EAAT,EAAa,IAAb,CAAP;AACH;;;;;;2CAGkB;AACf,gBAAI,EAAE,+BAAF,KAAqC,KAAK,YAA9C,EAA4D;AACxD,qBAAK,YAAL,GAAoB,KAApB;AACA;AACH;;AAED;AACH;;;iDAEwB,S,EAAW,Q,EAAU,Q,EAAU;AACpD,iBAAK,mBAAL,CAAyB,SAAzB,EAAoC,QAApC,EAA8C,QAA9C;AACH;;;;mGAEyB,S,EAAW,Q,EAAU,Q;;;;;;;;;AAK3C,wCAAQ,GAAR,CAAY,2BAAZ;;;oCAEK,KAAK,I;;;;;;uCAAY,KAAK,K;;;AAC3B,wCAAQ,GAAR,CAAY,mBAAZ;;;;;;AAMA,oCAAI,aAAa,QAAjB,EAA2B;AACvB,wCAAI,UAAU,KAAV,CAAgB,UAAhB,CAAJ,EACI,KAAK,IAAL,CAAU,SAAV,IAAuB,OAAO,UAAP,CAAkB,QAAlB,CAAvB,CADJ,KAEK,IAAI,UAAU,KAAV,CAAgB,WAAhB,CAAJ,EACD,KAAK,IAAL,CAAU,SAAV,IAAuB,iBAAiB,QAAjB,CAAvB,CADC,KAEA,IACD,UAAU,KAAV,CAAgB,WAAhB,KACG,UAAU,KAAV,CAAgB,QAAhB,C;AADH,uCAEG,UAAU,KAAV,CAAgB,WAAhB,CAFH,IAGG,UAAU,KAAV,CAAgB,eAAhB,CAHH,IAIG,UAAU,KAAV,CAAgB,mBAAhB,CAJH,IAKG,UAAU,KAAV,CAAgB,QAAhB,CALH,IAMG,UAAU,KAAV,CAAgB,aAAhB,CANH,IAOG,UAAU,KAAV,CAAgB,SAAhB,C;AAPH,uCAQG,UAAU,KAAV,CAAgB,OAAhB,C;AATF,sCAUH;AACE,iDAAK,IAAL,CAAU,SAAV,IAAuB,iBAAiB,QAAjB,CAAvB;AACH,yCAZI,MAaA;;AAEJ;AACJ;;;;;;;;;;;;;;;;;;;;AAIT,2CAAmB,aAAnB;;;;;kBAMA,SAAS,eAAT,CAAyB,YAAzB,EAAuC,aAAvC,C;;;;;;AAKA,yCAA2B,eAAK,SAAhC;;AAEA,SAAS,gBAAT,CAA0B,GAA1B,EAA+B;AAC3B,6BAAyB,GAAzB;AACA,QAAI,UAAU,IAAI,KAAJ,CAAU,GAAV,CAAd;AACA,WAAO;AACH,WAAG,OAAO,UAAP,CAAkB,QAAQ,CAAR,CAAlB,CADA;AAEH,WAAG,OAAO,UAAP,CAAkB,QAAQ,CAAR,CAAlB,CAFA;AAGH,WAAG,OAAO,UAAP,CAAkB,QAAQ,CAAR,CAAlB;AAHA,KAAP;AAKH;;AAED,SAAS,gBAAT,CAA0B,GAA1B,EAA+B;AAC3B,2BAAuB,GAAvB;AACA,QAAI,UAAU,IAAI,KAAJ,CAAU,GAAV,CAAd;AACA,WAAO;AACH,WAAG,QAAQ,CAAR,EAAW,IAAX,EADA;AAEH,WAAG,QAAQ,CAAR,EAAW,IAAX,EAFA;AAGH,WAAG,QAAQ,CAAR,EAAW,IAAX;AAHA,KAAP;AAKH;;AAED,SAAS,wBAAT,CAAkC,GAAlC,EAAuC;AACnC,QAAI,CAAC,IAAI,KAAJ,CAAU,8CAAV,CAAL,EACI,MAAM,IAAI,KAAJ,iHAAwH,GAAxH,OAAN;AACP;;AAED,SAAS,sBAAT,CAAgC,GAAhC,EAAqC;;AAEjC;AACH","file":"node.js","sourcesContent":["import 'document-register-element'\n//import 'webcomponents.js-v1/src/CustomElements/v1/native-shim'\n//import 'webcomponents.js-v1/src/CustomElements/v1/CustomElements'\n\nimport styles from './node-style'\nimport Node from '../motor/Node'\nimport MotorHTMLBase from './base'\nimport MotorHTMLScene from './scene'\nimport { makeLowercaseSetterAliases, proxyMethods } from '../motor/Utility'\n\nconsole.log(' -- motor-node module!')\n\nclass MotorHTMLNode extends MotorHTMLBase {\n\n    // Use constructor() in v1 Custom Elements instead of createdCallback.\n    //constructor() {\n\n    createdCallback() {\n        super.createdCallback()\n\n        // true if motor-node is mounted improperly (not mounted in motor-node or motor-scene)\n        this._attachError = false\n    }\n\n    attachedCallback() {\n\n        // Check that motor-nodes are mounted to motor-scenes or\n        // motor-nodes. Scene can be mounted to any element. In the future\n        // we could inspect the scene mount point, and advise about posisble\n        // styling issues (f.e. making the scene container have a height).\n        //\n        // XXX: different check needed when using is=\"\" attributes. For now,\n        // we'll discourage use of the awkward is=\"\" attribute.\n        if ( !(this instanceof MotorHTMLScene) ) {\n            if (\n                !(\n                    this.parentNode instanceof MotorHTMLNode\n                    || this.parentNode instanceof MotorHTMLScene\n                )\n                || this.parentNode._attachError // TODO, #40\n            ) {\n\n                this._attachError = true\n                throw new Error('<motor-node> elements must be appended only to <motor-scene> or other <motor-node> elements.')\n            }\n        }\n\n        super.attachedCallback()\n    }\n\n    getStyles() {\n        return styles\n    }\n\n    init() {\n        super.init()\n\n        // Attach this motor-node's Node to the parent motor-node's\n        // Node (doesn't apply to motor-scene, which doesn't have a\n        // parent to attach to).\n        //\n        // TODO: prevent this call if attachedCallback happened to call to\n        // addChild on the imperative side.\n        if ( !(this instanceof MotorHTMLScene) )\n            this.parentNode.node.addChild(this.node)\n    }\n\n    // this is called in attachedCallback, at which point this element hasa\n    // parentNode.\n    // @override\n    _makeImperativeCounterpart() {\n        return new Node({}, this)\n    }\n\n    // TODO XXX: remove corresponding imperative Node from it's parent.\n    detachedCallback() {\n        if (!(this instanceof MotorHTMLScene) && this._attachError) {\n            this._attachError = false\n            return\n        }\n\n        super.detachedCallback()\n    }\n\n    attributeChangedCallback(attribute, oldValue, newValue) {\n        this._updateNodeProperty(attribute, oldValue, newValue)\n    }\n\n    async _updateNodeProperty(attribute, oldValue, newValue) {\n        // TODO: Handle actual values (not just string property values as\n        // follows) for performance; especially when DOMMatrix is supported\n        // by browsers.\n\n        console.log('motor-node not ready yet.')\n        // if not initialized yet, wait.\n        if (!this.node) await this.ready\n        console.log('motor-node ready!')\n\n        // attributes on our HTML elements are the same name as those on\n        // the Node class (the setters).\n        // TODO: make a list of the properties (or get them dynamically) then\n        // assign them dynamically.\n        if (newValue !== oldValue) {\n            if (attribute.match(/opacity/i))\n                this.node[attribute] = window.parseFloat(newValue)\n            else if (attribute.match(/sizeMode/i))\n                this.node[attribute] = parseStringArray(newValue)\n            else if (\n                attribute.match(/rotation/i)\n                || attribute.match(/scale/i) // scale is TODO on imperative side.\n                || attribute.match(/position/i)\n                || attribute.match(/absoluteSize/i)\n                || attribute.match(/proportionalSize/i)\n                || attribute.match(/align/i)\n                || attribute.match(/mountPoint/i)\n                || attribute.match(/origin/i) // origin is TODO on imperative side.\n                || attribute.match(/skew/i) // skew is TODO on imperative side.\n            ) {\n                this.node[attribute] = parseNumberArray(newValue)\n            }\n            else {\n                /* nothing, ignore other attributes */\n            }\n        }\n    }\n}\n\nproxyMethods(Node, MotorHTMLNode)\n\n// XXX we'll export the class directly for v1 Custom Elements, and encourage\n// end users to define the name of the element as they see fit. We won't\n// define the name ourselves like we do here.\nexport default\ndocument.registerElement('motor-node', MotorHTMLNode)\n\n// for use by MotorHTML, convenient since HTMLElement attributes are all\n// converted to lowercase by default, so if we don't do this then we won't be\n// able to map attributes to Node setters as easily.\nmakeLowercaseSetterAliases(Node.prototype)\n\nfunction parseNumberArray(str) {\n    checkIsNumberArrayString(str)\n    let numbers = str.split(',')\n    return {\n        x: window.parseFloat(numbers[0]),\n        y: window.parseFloat(numbers[1]),\n        z: window.parseFloat(numbers[2]),\n    }\n}\n\nfunction parseStringArray(str) {\n    checkIsSizeArrayString(str)\n    let strings = str.split(',')\n    return {\n        x: strings[0].trim(),\n        y: strings[1].trim(),\n        z: strings[2].trim(),\n    }\n}\n\nfunction checkIsNumberArrayString(str) {\n    if (!str.match(/^\\s*(-?((\\d+\\.\\d+)|(\\d+))(\\s*,\\s*)?){3}\\s*$/g))\n        throw new Error(`Invalid array. Must be an array of numbers of length 3, for example \"1, 2.5,3\" without brackets. Yours was ${str}.`)\n}\n\nfunction checkIsSizeArrayString(str) {\n    // TODO: throw error if str is not a valid array of size mode strings.\n    return\n}\n"]}