{"version":3,"sources":["src/utils.js"],"names":[],"mappings":";;;;;QAmBgB,sB,GAAA,sB;QAMA,Y,GAAA,Y;;AAdhB;;;;;;;;;;;;AAQO,SAAS,sBAAT,CAAgC,WAAhC,EAA6C;AAChD,QAAI,UAAU,iBAAO,aAAP,EAAd;AACA,YAAQ,cAAR,CAAuB,WAAvB;AACA,WAAO,OAAP;AACH,C;;;;;;;;;;;AAEM,SAAS,YAAT,CAAsB,MAAtB,EAAyC;AAAA,sCAAR,MAAQ;AAAR,cAAQ;AAAA;;AAC5C,WAAO,OAAP,CAAe,UAAS,KAAT,EAAgB;AAC3B,aAAK,IAAI,IAAT,IAAiB,KAAjB,EAAwB;AACpB,mBAAO,IAAP,IAAe,MAAM,IAAN,CAAf;AACH;AACJ,KAJD;AAKH","file":"utils.js","sourcesContent":["/*\n * @overview Utility functions used by infamous.\n *\n * LICENSE\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n *\n */\n\nimport Engine from 'famous/src/core/Engine';\n\n/**\n * Creates a [famous/src/core/Context](#famous/src/core/Context) having the specified 3D perspective.\n *\n * @param {Number} perspective The integer amount of perspective to apply to the `Context`.\n * @returns {module: famous/src/core/Context} The `Context` with the applied perspective.\n */\nexport function contextWithPerspective(perspective) {\n    var context = Engine.createContext();\n    context.setPerspective(perspective);\n    return context;\n}\n\nexport function simpleExtend(object, ...others) {\n    others.forEach(function(other) {\n        for (var prop in other) {\n            object[prop] = other[prop]\n        }\n    })\n}\n"]}